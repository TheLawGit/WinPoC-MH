---
- hosts: all
  gather_facts: true
  tasks:

    - name: Generate random string with length 24
      ansible.builtin.set_fact:
        comppass: "{{ lookup('community.general.random_string', min_lower=1, min_upper=1, min_special=1, min_numeric=1, length=24, override_special='!@#$%^&*') }}"
    
    - name: Create Computer Object in Active Directory
      ansible.windows.win_powershell:
        script: |
          param(
          [PSCredential]$Credential
          )
          
          New-ADComputer -Credential $Credential -Name "{{ dmz_host }}" -SamAccountName "{{ dmz_host }}" -Path "{{ domain_ou }}" -accountPassword (ConvertTo-SecureString -String "{{ comppass }}" -AsPlainText -force)
          Start-Sleep -s 5
          
        sensitive_parameters:
          - name: Credential
            username: "{{ domain_user }}"
            password: '{{ domain_password }}'

    - name: Add to AD RODC Replication Group 
      ansible.windows.win_powershell:
        script: |      
          Add-ADGroupMember -Identity 'Allowed RODC Password Replication Group' -Members "{{ dmz_host }}"
          Start-Sleep -s 5
          
          Add-ADDomainControllerPasswordReplicationPolicy -Identity "{{ RODC }}" -AllowedList "CN={{ dmz_host }},{{ domain_ou }}"
          Start-Sleep -s 5
          
    - name: Create DNS Record
      ansible.windows.win_powershell:
        script: |   
          Add-DnsServerResourceRecordA -Computername "{{ InternalADServer }}" -Name "{{ dmz_host }}" -ZoneName "{{ domain }}" -IPv4Address "{{ dmz_host_ip }}" -CreatePtr
          Start-Sleep -s 5

    - name: Changing NetBiosOption Registry recursively under Interfaces
      ansible.windows.win_regedit:
        path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters'
        name: SiteName
        data: DMZ
        type: string
        state: present
        
    - name: Print joindomain.vbs parameters
      ansible.builtin.debug:
        msg: joindomain.vbs /domain {{ domain }} /dc {{ RODC }} /machinepassword {{ comppass }} /readonly
        
        #      $password = ConvertTo-SecureString -String "{{ domain_password }}" -AsPlainText -Force
    #      $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "{{ domain_user }}", $password
     # vars:
     #   ansible_become: yes
     #   ansible_become_user: "{{ domain_user }}"
     #   ansible_become_pass: "{{ domain_password }}"
        
#    - name: Create "{{ ansible_hostname }}" Computer Object in Active Directory
#      microsoft.ad.computer:
#        domain_username: "{{ domain_user }}"
#        domain_password: "{{ domain_password }}"
#        domain_server: "{{ domain_server }}"
#        name: "{{ ansible_hostname }}"
#        sam_account_name: "{{ ansible_hostname }}"
#        path: "{{ domain_ou }}"
#        enabled: true
#        state: present
#        attributes:
#          add:
#            accountPassword: efwinfwin938839fvi$$
